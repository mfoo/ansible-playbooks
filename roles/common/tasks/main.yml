
---

- name: Install essential packages
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - vim
    - emacs
    - git
    - tmux
    - wget
    - htop
    - zsh
    - apt-transport-https
    - irssi
    - sshfs
    - unzip
    - unrar-free
    - htop
    - iptraf
    - autojump
  sudo: yes

- name: Install ag
  apt:
    pkg: silversearcher-ag
    state: installed
  sudo: true
  when: ansible_distribution == 'Debian' or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int > 12)

- name: Clone my dotfiles repository (SSH)
  git:
    repo: git@github.com:mfoo/dotfiles.git
    dest: ~/repositories/dotfiles
    accept_hostkey: yes
  register: dotfiles_repo
  when: lookup('env','TRAVIS') is not defined

- name: Clone my dotfiles repository (HTTPS)
  git:
    repo: https://github.com/mfoo/dotfiles.git
    dest: ~/repositories/dotfiles
    accept_hostkey: yes
  register: dotfiles_repo
  when: lookup('env','TRAVIS')

- name: Clone the gmarik/Vundle repository
  git:
    repo: https://github.com/gmarik/Vundle.vim.git
    dest: ~/repositories/dotfiles/.vim/bundle/Vundle.vim

- name: Find all dotfiles
  shell: "find ~/repositories/dotfiles -name '.*' -not -name '.git' -maxdepth 1"
  when: dotfiles_repo.changed
  register: dotfiles

- name: Find and delete conflicting dotfiles that are not symlinks
  shell: "find ~/ -maxdepth 1 -name {{ item | regex_replace('.*/dotfiles/', '') }} -type f
          -delete"
  with_items: dotfiles.stdout_lines
  when: dotfiles_repo.changed

- name: Symlink all dotfiles into ~/
  file:
    src: "{{ item }}"
    dest: "{{ item | regex_replace('.*/dotfiles/', '') }}"
    state: link
  with_items: dotfiles.stdout_lines
  when: dotfiles_repo.changed

- name: Set my default shell to zsh
  user:
    name: martin
    shell: /usr/bin/zsh
  sudo: yes

- name: Clone oh-my-zsh
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: ~/.oh-my-zsh

- name: Ensure ~/bin exists
  file:
    path: ~/bin
    state: directory

- name: Ensure ~/.fonts exists
  file:
    path: ~/.fonts
    state: directory

- name: Clone the Powerline Fonts repository
  git:
    repo: https://github.com/powerline/fonts.git
    dest: ~/repositories/powerline-fonts
    accept_hostkey: yes
  register: powerline_fonts_repo

- name: Copy the fonts to ~/.fonts
  shell: find ~/repositories/powerline-fonts -type f -name '*.[o,t]tf' -exec cp {} ~/.fonts \;
  when: powerline_fonts_repo.changed

- name: Update the font cache
  command: fc-cache -f ~/.fonts
  when: powerline_fonts_repo.changed
